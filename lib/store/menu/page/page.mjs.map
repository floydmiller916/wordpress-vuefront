{"version":3,"sources":["../../../../src/store/menu/page/page.ts"],"names":["gql","state","entities","getters","get","mutations","setEntities","pages","key","content","title","to","keyword","id","children","actions","load","commit","data","$vfapollo","query","variables","url","pagesList","e","root"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAMA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAArB;AAIP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACH,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,QAAb;AACD;;AAHkD,CAA9C;AAMP,OAAO,MAAMG,SAA8B,GAAG;AAC5CC,EAAAA,WAAW,CAACL,KAAD,EAAQM,KAAR,EAAe;AACxBN,IAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;;AACA,SAAK,MAAMM,GAAX,IAAkBD,KAAK,CAACE,OAAxB,EAAiC;AAC/BR,MAAAA,KAAK,CAACC,QAAN,GAAiB,CACf,GAAGD,KAAK,CAACC,QADM,EAEf;AACEQ,QAAAA,KAAK,EAAEH,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBE,KAD5B;AAEEC,QAAAA,EAAE,EACAJ,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBI,OAAnB,KAA+B,EAA/B,GACK,IAAGL,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBI,OAAQ,EADnC,GAEK,gBAAeL,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBK,EAAG,EAL9C;AAMEC,QAAAA,QAAQ,EAAE;AANZ,OAFe,CAAjB;AAWD;AACF;;AAhB2C,CAAvC;AAmBP,OAAO,MAAMC,OAAqC,GAAG;AACnD,QAAMC,IAAN,CAAW;AAAEC,IAAAA;AAAF,GAAX,EAAuB;AACrB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEpB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAXkD;AAY1CqB,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE;AADI;AAZ+B,OAArB,CAAvB;AAiBAL,MAAAA,MAAM,CAAC,aAAD,EAAgBC,IAAI,CAACK,SAArB,CAAN;AACD,KAnBD,CAmBE,OAAOC,CAAP,EAAU;AACVP,MAAAA,MAAM,CAAC,2BAAD,EAA8BO,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF;;AA1BkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\r\nimport { RootState } from \"vuefront-store\";\r\nimport { IMenuLink } from \"../../common/menu/menu\";\r\nimport gql from \"graphql-tag\";\r\n\r\nexport type State = {\r\n  entities: IMenuLink[];\r\n};\r\n\r\nexport const state: State = {\r\n  entities: [],\r\n};\r\n\r\nexport const getters: GetterTree<State, RootState> = {\r\n  get(state) {\r\n    return state.entities;\r\n  },\r\n};\r\n\r\nexport const mutations: MutationTree<State> = {\r\n  setEntities(state, pages) {\r\n    state.entities = [];\r\n    for (const key in pages.content) {\r\n      state.entities = [\r\n        ...state.entities,\r\n        {\r\n          title: pages.content[key].title,\r\n          to:\r\n            pages.content[key].keyword !== \"\"\r\n              ? `/${pages.content[key].keyword}`\r\n              : `/common/page/${pages.content[key].id}`,\r\n          children: [],\r\n        },\r\n      ];\r\n    }\r\n  },\r\n};\r\n\r\nexport const actions: ActionTree<State, RootState> = {\r\n  async load({ commit }) {\r\n    try {\r\n      const { data } = await this.$vfapollo.query({\r\n        query: gql`\r\n          {\r\n            pagesList(page: 1, size: -1) {\r\n              content {\r\n                id\r\n                title\r\n                url(url: \"/page/_id\")\r\n              }\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          url: \"/common/page/_id\",\r\n        },\r\n      });\r\n\r\n      commit(\"setEntities\", data.pagesList);\r\n    } catch (e) {\r\n      commit(\"vuefront/setResponseError\", e, {\r\n        root: true,\r\n      });\r\n    }\r\n  },\r\n};\r\n"],"file":"page.mjs"}