{"version":3,"sources":["../../../../src/store/menu/page/page.ts"],"names":["gql","state","entities","getters","get","mutations","setEntities","pages","key","content","title","to","keyword","id","children","actions","load","commit","data","$vfapollo","query","variables","url","pagesList","e","root"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAMA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAArB;AAIP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACH,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,QAAb;AACD;;AAHkD,CAA9C;AAMP,OAAO,MAAMG,SAA8B,GAAG;AAC5CC,EAAAA,WAAW,CAACL,KAAD,EAAQM,KAAR,EAAe;AACxBN,IAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;;AACA,SAAK,MAAMM,GAAX,IAAkBD,KAAK,CAACE,OAAxB,EAAiC;AAC/BR,MAAAA,KAAK,CAACC,QAAN,GAAiB,CACf,GAAGD,KAAK,CAACC,QADM,EAEf;AACEQ,QAAAA,KAAK,EAAEH,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBE,KAD5B;AAEEC,QAAAA,EAAE,EACAJ,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBI,OAAnB,KAA+B,EAA/B,GACK,IAAGL,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBI,OAAQ,EADnC,GAEK,gBAAeL,KAAK,CAACE,OAAN,CAAcD,GAAd,EAAmBK,EAAG,EAL9C;AAMEC,QAAAA,QAAQ,EAAE;AANZ,OAFe,CAAjB;AAWD;AACF;;AAhB2C,CAAvC;AAmBP,OAAO,MAAMC,OAAqC,GAAG;AACnD,QAAMC,IAAN,CAAW;AAAEC,IAAAA;AAAF,GAAX,EAAuB;AACrB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEpB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAXkD;AAY1CqB,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE;AADI;AAZ+B,OAArB,CAAvB;AAiBAL,MAAAA,MAAM,CAAC,aAAD,EAAgBC,IAAI,CAACK,SAArB,CAAN;AACD,KAnBD,CAmBE,OAAOC,CAAP,EAAU;AACVP,MAAAA,MAAM,CAAC,2BAAD,EAA8BO,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF;;AA1BkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { RootState } from \"vuefront-store\";\nimport { IMenuLink } from \"../../common/menu/menu\";\nimport gql from \"graphql-tag\";\n\nexport type State = {\n  entities: IMenuLink[];\n};\n\nexport const state: State = {\n  entities: [],\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  get(state) {\n    return state.entities;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setEntities(state, pages) {\n    state.entities = [];\n    for (const key in pages.content) {\n      state.entities = [\n        ...state.entities,\n        {\n          title: pages.content[key].title,\n          to:\n            pages.content[key].keyword !== \"\"\n              ? `/${pages.content[key].keyword}`\n              : `/common/page/${pages.content[key].id}`,\n          children: [],\n        },\n      ];\n    }\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async load({ commit }) {\n    try {\n      const { data } = await this.$vfapollo.query({\n        query: gql`\n          {\n            pagesList(page: 1, size: -1) {\n              content {\n                id\n                title\n                url(url: \"/page/_id\")\n              }\n            }\n          }\n        `,\n        variables: {\n          url: \"/common/page/_id\",\n        },\n      });\n\n      commit(\"setEntities\", data.pagesList);\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, {\n        root: true,\n      });\n    }\n  },\n};\n"],"file":"page.mjs"}