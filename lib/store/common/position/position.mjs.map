{"version":3,"sources":["../../../../src/store/common/position/position.ts"],"names":["state","positions","modules","layouts","path","params","url","mutations","setPosition","name","route","status","setLayout","layout","setModule","list","setRoute","payload","setParams","getters","rootGetters","currentRoute","position","replace","actions","loadModules","commit","result","$vuefront","regexRoute","regex","RegExp","test","extensions","key","component","props"],"mappings":"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","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\r\nimport { RootState } from \"vuefront-store\";\r\ninterface IModule {\r\n  props: {\r\n    [key: string]: any;\r\n  };\r\n  component: any;\r\n}\r\nexport type State = {\r\n  path: string;\r\n  layouts: {\r\n    [key: string]: string;\r\n  };\r\n  positions: {\r\n    [key: string]: {\r\n      [key2: string]: boolean;\r\n    };\r\n  };\r\n  modules: {\r\n    [key: string]: {\r\n      [key2: string]: IModule[];\r\n    };\r\n  };\r\n  params: {\r\n    [key: string]: any;\r\n  };\r\n};\r\nexport const state: () => State = () => ({\r\n  positions: {},\r\n  modules: {},\r\n  layouts: {},\r\n  path: \"\",\r\n  params: {\r\n    url: \"\",\r\n  },\r\n});\r\n\r\nexport const mutations: MutationTree<State> = {\r\n  setPosition(state, { name, route, status }) {\r\n    if (typeof state.positions[route] === \"undefined\") {\r\n      state.positions[route] = {};\r\n    }\r\n    state.positions[route][name] = status;\r\n  },\r\n  setLayout(state, { route, layout }) {\r\n    state.layouts[route] = layout;\r\n  },\r\n  setModule(state, { name, route, list }) {\r\n    if (typeof state.modules[route] === \"undefined\") {\r\n      state.modules[route] = {};\r\n    }\r\n    state.modules[route][name] = list;\r\n  },\r\n  setRoute(state, payload) {\r\n    state.path = payload;\r\n  },\r\n  setParams(state, payload) {\r\n    state.params = payload;\r\n  },\r\n};\r\n\r\nexport const getters: GetterTree<State, RootState> = {\r\n  modules(state, rootGetters) {\r\n    return (name: string) => {\r\n      if (typeof state.modules[rootGetters.currentRoute] === \"undefined\") {\r\n        return null;\r\n      }\r\n      if (\r\n        typeof state.modules[rootGetters.currentRoute][name] === \"undefined\"\r\n      ) {\r\n        return null;\r\n      }\r\n      return state.modules[rootGetters.currentRoute][name];\r\n    };\r\n  },\r\n  layout(state, rootGetters) {\r\n    if (typeof state.layouts[rootGetters.currentRoute] === \"undefined\") {\r\n      return null;\r\n    }\r\n    return state.layouts[rootGetters.currentRoute];\r\n  },\r\n  position(state, rootGetters) {\r\n    return (name: string) => {\r\n      if (typeof state.positions[rootGetters.currentRoute] === \"undefined\") {\r\n        return null;\r\n      }\r\n      if (\r\n        typeof state.positions[rootGetters.currentRoute][name] === \"undefined\"\r\n      ) {\r\n        return null;\r\n      }\r\n      return state.positions[rootGetters.currentRoute][name];\r\n    };\r\n  },\r\n  currentRoute(state) {\r\n    let currentRoute = state.path !== \"\" ? state.path : \"/\";\r\n    if (state?.params?.url && state.params.url !== \"\") {\r\n      currentRoute = state.params.url;\r\n    }\r\n\r\n    currentRoute = currentRoute.replace(\"/amp\", \"\");\r\n\r\n    currentRoute = currentRoute !== \"\" ? currentRoute : \"/\";\r\n\r\n    return currentRoute;\r\n  },\r\n};\r\n\r\nexport const actions: ActionTree<State, RootState> = {\r\n  loadModules({ commit, getters }, { position }) {\r\n    let result: IModule[] = [];\r\n    if (getters.modules(position)) {\r\n      return;\r\n    }\r\n\r\n    for (const route in this.$vuefront.layouts) {\r\n      const layout = this.$vuefront.layouts[route];\r\n      let regexRoute = route.replace(\"*\", \".*\");\r\n      regexRoute = regexRoute.replace(\"//\", \"\\\\//\");\r\n      const regex = new RegExp(\"^\" + regexRoute + \"$\", \"i\");\r\n\r\n      if (regex.test(getters.currentRoute)) {\r\n        let extensions = [];\r\n        if (typeof layout[position] !== \"undefined\") {\r\n          extensions = layout[position];\r\n        }\r\n\r\n        if (\r\n          typeof layout.extensions !== \"undefined\" &&\r\n          typeof layout.extensions[position] !== \"undefined\"\r\n        ) {\r\n          extensions = layout.extensions[position];\r\n        }\r\n        for (const key in extensions) {\r\n          if (typeof extensions[key] === \"string\") {\r\n            if (\r\n              typeof this.$vuefront.extensions[extensions[key]] !== \"undefined\"\r\n            ) {\r\n              result = [\r\n                ...result,\r\n                {\r\n                  component: extensions[key],\r\n                  props: {},\r\n                },\r\n              ];\r\n            }\r\n          } else if (\r\n            typeof this.$vuefront.extensions[extensions[key][0]] !== \"undefined\"\r\n          ) {\r\n            result = [\r\n              ...result,\r\n              {\r\n                component: extensions[key][0],\r\n                props: extensions[key][1],\r\n              },\r\n            ];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    commit(\"setModule\", {\r\n      name: position,\r\n      list: result,\r\n      route: getters.currentRoute,\r\n    });\r\n  },\r\n};\r\n"],"file":"position.mjs"}