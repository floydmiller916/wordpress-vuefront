{"version":3,"sources":["../../../../src/store/common/vuefront/vuefront.ts"],"names":["state","error","ssr","sidebar","sidebarCart","mutations","toggleSidebar","toggleSidebarCart","setResponseError","e","graphQLErrors","message","setError","payload","setSSR","getters","actions","vuefrontInit","dispatch","commit","$cookies","get","root","Promise","all","nuxtServerInit","nuxtClientInit","rootGetters","$router","beforeEach","to","from","next","path"],"mappings":"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","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { RootState } from \"vuefront-store\";\nexport type State = {\n  error: boolean | string;\n  ssr: boolean;\n  sidebar: boolean;\n  sidebarCart: boolean;\n};\nexport const state: State = {\n  error: false,\n  ssr: false,\n  sidebar: false,\n  sidebarCart: false,\n};\n\nexport const mutations: MutationTree<State> = {\n  toggleSidebar(state) {\n    state.sidebar = !state.sidebar;\n  },\n  toggleSidebarCart(state) {\n    state.sidebarCart = !state.sidebarCart;\n  },\n  setResponseError(state, e) {\n    if (e.graphQLErrors && e.graphQLErrors.message) {\n      state.error = e.graphQLErrors.message;\n    } else if (e.graphQLErrors && typeof e.graphQLErrors[0] !== \"undefined\") {\n      state.error = e.graphQLErrors[0].message;\n    } else if (e.graphQLErrors) {\n      state.error = e.graphQLErrors;\n    } else {\n      state.error = e;\n    }\n  },\n  setError(state, payload) {\n    state.error = payload;\n  },\n  setSSR(state, payload) {\n    state.ssr = payload;\n  },\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  sidebar(state) {\n    return state.sidebar;\n  },\n  sidebarCart(state) {\n    return state.sidebarCart;\n  },\n  error(state) {\n    return state.error;\n  },\n  ssr(state) {\n    return state.ssr;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async vuefrontInit({ dispatch, commit }) {\n    if (this.$cookies.get(\"token\")) {\n      commit(\"common/customer/setToken\", this.$cookies.get(\"token\"), {\n        root: true,\n      });\n    }\n    await Promise.all([\n      dispatch(\"store/cart/load\", {}, { root: true }),\n      dispatch(\"common/language/load\", {}, { root: true }),\n      dispatch(\"common/customer/checkLogged\", {}, { root: true }),\n      dispatch(\"store/currency/load\", {}, { root: true }),\n    ]);\n\n    if (this.$cookies.get(\"mode\")) {\n      commit(\"store/category/setMode\", this.$cookies.get(\"mode\"), {\n        root: true,\n      });\n    }\n  },\n  async nuxtServerInit({ dispatch, commit }) {\n    await dispatch(\"vuefrontInit\");\n    commit(\"setSSR\", true);\n  },\n  async nuxtClientInit({ commit, dispatch, rootGetters }) {\n    this.$router.beforeEach((to, from, next) => {\n      if (to.path !== from.path && rootGetters[\"vuefront/sidebar\"]) {\n        commit(\"toggleSidebar\");\n      }\n      next();\n    });\n    if (!rootGetters[\"vuefront/ssr\"]) {\n      await dispatch(\"vuefrontInit\");\n    }\n  },\n};\n"],"file":"vuefront.mjs"}