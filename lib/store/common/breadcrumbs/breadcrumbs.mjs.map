{"version":3,"sources":["../../../../src/store/common/breadcrumbs/breadcrumbs.ts"],"names":["state","items","loaded","getters","get","mutations","setItems","payload","clearItems","setLoaded","actions","init","dispatch","rootGetters","commit","load","contactData","breadcrumbs","length","$router","currentRoute","value","matched","component","instances","default","$options","result","call"],"mappings":"AAWA,OAAO,MAAMA,KAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACJ,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,KAAb;AACD,GAHkD;;AAInDC,EAAAA,MAAM,CAACF,KAAD,EAAQ;AACZ,WAAOA,KAAK,CAACE,MAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAMG,SAA8B,GAAG;AAC5CC,EAAAA,QAAQ,CAACN,KAAD,EAAQO,OAAR,EAAiB;AACvBP,IAAAA,KAAK,CAACC,KAAN,GAAcM,OAAd;AACD,GAH2C;;AAI5CC,EAAAA,UAAU,CAACR,KAAD,EAAQO,OAAR,EAAiB;AACzBP,IAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACD,GAN2C;;AAO5CQ,EAAAA,SAAS,CAACT,KAAD,EAAQO,OAAR,EAAiB;AACxBP,IAAAA,KAAK,CAACE,MAAN,GAAeK,OAAf;AACD;;AAT2C,CAAvC;AAYP,OAAO,MAAMG,OAAqC,GAAG;AACnDC,EAAAA,IAAI,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,GAAD,EAAoC;AACtCA,IAAAA,MAAM,CAAC,YAAD,CAAN;AACAA,IAAAA,MAAM,CAAC,WAAD,EAAc,KAAd,CAAN;AACD,GAJkD;;AAMnDC,EAAAA,IAAI,CAAC;AAAED,IAAAA;AAAF,GAAD,EAAaE,WAAb,EAA0B;AAC5B,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAID,WAAW,IAAIA,WAAW,CAACE,MAAZ,GAAqB,CAAxC,EAA2C;AACzCD,MAAAA,WAAW,GAAGD,WAAd;AACD;;AACD,QAAI,KAAKG,OAAL,CAAaC,YAAb,CAA0BC,KAA1B,CAAgCC,OAAhC,CAAwCJ,MAAxC,GAAiD,CAArD,EAAwD;AACtD,YAAMK,SAAS,GACb,KAAKJ,OAAL,CAAaC,YAAb,CAA0BC,KAA1B,CAAgCC,OAAhC,CAAwC,CAAxC,EAA2CE,SAA3C,CAAqDC,OADvD;;AAEA,UACEF,SAAS,KAAK,IAAd,IACA,OAAOA,SAAP,KAAqB,WADrB,IAEA,OAAOA,SAAS,CAACG,QAAjB,KAA8B,WAF9B,IAGAH,SAAS,CAACG,QAAV,KAAuB,IAHvB,IAIA,OAAOH,SAAS,CAACG,QAAV,CAAmBT,WAA1B,KAA0C,WAL5C,EAME;AACA,cAAMU,MAAM,GAAGJ,SAAS,CAACG,QAAV,CAAmBT,WAAnB,CAA+BW,IAA/B,CAAoCL,SAApC,CAAf;AACAN,QAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiB,GAAGU,MAApB,CAAd;AACD;AACF;;AACDb,IAAAA,MAAM,CAAC,UAAD,EAAaG,WAAb,CAAN;AACAH,IAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACD;;AA3BkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { RootState } from \"vuefront-store\";\ninterface IBreadcrumbs {\n  title: string;\n  to: string;\n}\nexport type State = {\n  loaded: boolean;\n  items: IBreadcrumbs[];\n};\n\nexport const state: State = {\n  items: [],\n  loaded: false,\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  get(state) {\n    return state.items;\n  },\n  loaded(state) {\n    return state.loaded;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setItems(state, payload) {\n    state.items = payload;\n  },\n  clearItems(state, payload) {\n    state.items = [];\n  },\n  setLoaded(state, payload) {\n    state.loaded = payload;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  init({ dispatch, rootGetters, commit }) {\n    commit(\"clearItems\");\n    commit(\"setLoaded\", false);\n  },\n\n  load({ commit }, contactData) {\n    let breadcrumbs = [];\n    if (contactData && contactData.length > 0) {\n      breadcrumbs = contactData;\n    }\n    if (this.$router.currentRoute.value.matched.length > 0) {\n      const component =\n        this.$router.currentRoute.value.matched[0].instances.default;\n      if (\n        component !== null &&\n        typeof component !== \"undefined\" &&\n        typeof component.$options !== \"undefined\" &&\n        component.$options !== null &&\n        typeof component.$options.breadcrumbs !== \"undefined\"\n      ) {\n        const result = component.$options.breadcrumbs.call(component);\n        breadcrumbs = [...breadcrumbs, ...result];\n      }\n    }\n    commit(\"setItems\", breadcrumbs);\n    commit(\"setLoaded\", true);\n  },\n};\n"],"file":"breadcrumbs.mjs"}