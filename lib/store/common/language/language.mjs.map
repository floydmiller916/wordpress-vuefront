{"version":3,"sources":["../../../../src/store/common/language/language.ts"],"names":["find","gql","state","language","locale","getters","get","mutations","setLanguage","setLocal","actions","load","commit","data","$vfapollo","query","active","code","e","root","edit","dispatch","rootGetters","mutation","variables","editLanguage"],"mappings":"AAGA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAOA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAd;AAKP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACJ,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,QAAb;AACD,GAHkD;;AAInDC,EAAAA,MAAM,CAACF,KAAD,EAAQ;AACZ,WAAOA,KAAK,CAACE,MAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAMG,SAA8B,GAAG;AAC5CC,EAAAA,WAAW,CAACN,KAAD,EAAQC,QAAR,EAAkB;AAC3BD,IAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD,GAH2C;;AAI5CM,EAAAA,QAAQ,CAACP,KAAD,EAAQE,MAAR,EAAgB;AACtBF,IAAAA,KAAK,CAACE,MAAN,GAAeA,MAAf;AACD;;AAN2C,CAAvC;AASP,OAAO,MAAMM,OAAqC,GAAG;AACnD,QAAMC,IAAN,CAAW;AAAEC,IAAAA;AAAF,GAAX,EAAuB;AACrB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEd,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVkD,OAArB,CAAvB;AAaAW,MAAAA,MAAM,CAAC,aAAD,EAAgBC,IAAI,CAACV,QAArB,CAAN;AACA,YAAMa,MAAM,GAAGhB,IAAI,CAACa,IAAI,CAACV,QAAN,EAAgB;AACjCa,QAAAA,MAAM,EAAE;AADyB,OAAhB,CAAnB;;AAIA,UAAIA,MAAJ,EAAY;AACVJ,QAAAA,MAAM,CAAC,UAAD,EAAaI,MAAM,CAACC,IAApB,CAAN;AACD;AACF,KAtBD,CAsBE,OAAOC,CAAP,EAAU;AACVN,MAAAA,MAAM,CAAC,2BAAD,EAA8BM,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF,GA7BkD;;AA8BnD,QAAMC,IAAN,CAAW;AAAER,IAAAA,MAAF;AAAUS,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAX,EAA8C;AAAEL,IAAAA;AAAF,GAA9C,EAAwD;AACtD,UAAMI,QAAQ,CACZ,eADY,EAEZ;AACEE,MAAAA,QAAQ,EAAEtB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAVM;AAWEuB,MAAAA,SAAS,EAAE;AACTP,QAAAA;AADS;AAXb,KAFY,EAiBZ;AACEE,MAAAA,IAAI,EAAE;AADR,KAjBY,CAAd;;AAsBA,QAAI,CAACG,WAAW,CAAC,gBAAD,CAAhB,EAAoC;AAClCV,MAAAA,MAAM,CAAC,aAAD,EAAgBU,WAAW,CAAC,YAAD,CAAX,CAA0BG,YAA1C,CAAN;AACD;AACF;;AAxDkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\r\nimport { RootState } from \"vuefront-store\";\r\nimport { Language } from \"vuefront-api\";\r\nimport { find } from \"lodash\";\r\nimport gql from \"graphql-tag\";\r\n\r\nexport type State = {\r\n  language: Language[];\r\n  locale: string;\r\n};\r\n\r\nexport const state = {\r\n  language: [],\r\n  locale: \"en-gb\",\r\n};\r\n\r\nexport const getters: GetterTree<State, RootState> = {\r\n  get(state) {\r\n    return state.language;\r\n  },\r\n  locale(state) {\r\n    return state.locale;\r\n  },\r\n};\r\n\r\nexport const mutations: MutationTree<State> = {\r\n  setLanguage(state, language) {\r\n    state.language = language;\r\n  },\r\n  setLocal(state, locale) {\r\n    state.locale = locale;\r\n  },\r\n};\r\n\r\nexport const actions: ActionTree<State, RootState> = {\r\n  async load({ commit }) {\r\n    try {\r\n      const { data } = await this.$vfapollo.query({\r\n        query: gql`\r\n          {\r\n            language {\r\n              name\r\n              image\r\n              code\r\n              active\r\n            }\r\n          }\r\n        `,\r\n      });\r\n\r\n      commit(\"setLanguage\", data.language);\r\n      const active = find(data.language, {\r\n        active: true,\r\n      });\r\n\r\n      if (active) {\r\n        commit(\"setLocal\", active.code);\r\n      }\r\n    } catch (e) {\r\n      commit(\"vuefront/setResponseError\", e, {\r\n        root: true,\r\n      });\r\n    }\r\n  },\r\n  async edit({ commit, dispatch, rootGetters }, { code }) {\r\n    await dispatch(\r\n      \"apollo/mutate\",\r\n      {\r\n        mutation: gql`\r\n          mutation ($code: String) {\r\n            editLanguage(code: $code) {\r\n              name\r\n              image\r\n              code\r\n              active\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          code,\r\n        },\r\n      },\r\n      {\r\n        root: true,\r\n      }\r\n    );\r\n\r\n    if (!rootGetters[\"vuefront/error\"]) {\r\n      commit(\"setLanguage\", rootGetters[\"apollo/get\"].editLanguage);\r\n    }\r\n  },\r\n};\r\n"],"file":"language.mjs"}