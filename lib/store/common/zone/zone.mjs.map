{"version":3,"sources":["../../../../src/store/common/zone/zone.ts"],"names":["gql","state","zone","entities","content","getters","get","list","mutations","setZone","payload","setEntities","actions","commit","dispatch","rootGetters","zoneData","data","$vfapollo","query","variables","zonesList","e","root","id"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAMA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD;AAFgB,CAArB;AAOP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACL,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,IAAb;AACD,GAHkD;;AAInDK,EAAAA,IAAI,CAACN,KAAD,EAAQ;AACV,WAAOA,KAAK,CAACE,QAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAMK,SAA8B,GAAG;AAC5CC,EAAAA,OAAO,CAACR,KAAD,EAAQS,OAAR,EAAiB;AACtBT,IAAAA,KAAK,CAACC,IAAN,GAAaQ,OAAb;AACD,GAH2C;;AAI5CC,EAAAA,WAAW,CAACV,KAAD,EAAQS,OAAR,EAAiB;AAC1BT,IAAAA,KAAK,CAACE,QAAN,GAAiBO,OAAjB;AACD;;AAN2C,CAAvC;AASP,OAAO,MAAME,OAAqC,GAAG;AACnD,QAAML,IAAN,CAAW;AAAEM,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAX,EAA8CC,QAA9C,EAAwD;AACtD,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEnB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAhBkD;AAiB1CoB,QAAAA,SAAS,EAAEJ;AAjB+B,OAArB,CAAvB;AAmBAH,MAAAA,MAAM,CAAC,aAAD,EAAgBI,IAAI,CAACI,SAArB,CAAN;AACD,KArBD,CAqBE,OAAOC,CAAP,EAAU;AACVT,MAAAA,MAAM,CAAC,2BAAD,EAA8BS,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF,GA5BkD;;AA6BnD,QAAMjB,GAAN,CAAU;AAAEO,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAV,EAA6C;AAAES,IAAAA;AAAF,GAA7C,EAAqD;AACnD,QAAI;AACF,YAAM;AAAEP,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEnB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SARkD;AAS1CoB,QAAAA,SAAS,EAAE;AAAEI,UAAAA;AAAF;AAT+B,OAArB,CAAvB;AAWAX,MAAAA,MAAM,CAAC,SAAD,EAAYI,IAAI,CAACf,IAAjB,CAAN;AACD,KAbD,CAaE,OAAOoB,CAAP,EAAU;AACVT,MAAAA,MAAM,CAAC,2BAAD,EAA8BS,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF;;AAhDkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { RootState } from \"vuefront-store\";\nimport { Zone, ZonesResult } from \"vuefront-api\";\nimport gql from \"graphql-tag\";\n\nexport type State = {\n  zone: Zone;\n  entities: ZonesResult;\n};\nexport const state: State = {\n  zone: {},\n  entities: {\n    content: [],\n  },\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  get(state) {\n    return state.zone;\n  },\n  list(state) {\n    return state.entities;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setZone(state, payload) {\n    state.zone = payload;\n  },\n  setEntities(state, payload) {\n    state.entities = payload;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async list({ commit, dispatch, rootGetters }, zoneData) {\n    try {\n      const { data } = await this.$vfapollo.query({\n        query: gql`\n          query ($page: Int, $size: Int, $country_id: String) {\n            zonesList(page: $page, size: $size, country_id: $country_id) {\n              content {\n                id\n                name\n              }\n              totalPages\n              totalElements\n              first\n              last\n              number\n              numberOfElements\n            }\n          }\n        `,\n        variables: zoneData,\n      });\n      commit(\"setEntities\", data.zonesList);\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, {\n        root: true,\n      });\n    }\n  },\n  async get({ commit, dispatch, rootGetters }, { id }) {\n    try {\n      const { data } = await this.$vfapollo.query({\n        query: gql`\n          query ($id: String) {\n            zone(id: $id) {\n              id\n              name\n            }\n          }\n        `,\n        variables: { id },\n      });\n      commit(\"setZone\", data.zone);\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, {\n        root: true,\n      });\n    }\n  },\n};\n"],"file":"zone.mjs"}