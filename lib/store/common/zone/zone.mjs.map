{"version":3,"sources":["../../../../src/store/common/zone/zone.ts"],"names":["gql","state","zone","entities","content","getters","get","list","mutations","setZone","payload","setEntities","actions","zoneData","commit","dispatch","rootGetters","data","$vfapollo","query","variables","zonesList","e","root","id"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAMA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD;AAFgB,CAArB;AAOP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACL,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,IAAb;AACD,GAHkD;;AAInDK,EAAAA,IAAI,CAACN,KAAD,EAAQ;AACV,WAAOA,KAAK,CAACE,QAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAMK,SAA8B,GAAG;AAC5CC,EAAAA,OAAO,CAACR,KAAD,EAAQS,OAAR,EAAiB;AACtBT,IAAAA,KAAK,CAACC,IAAN,GAAaQ,OAAb;AACD,GAH2C;;AAI5CC,EAAAA,WAAW,CAACV,KAAD,EAAQS,OAAR,EAAiB;AAC1BT,IAAAA,KAAK,CAACE,QAAN,GAAiBO,OAAjB;AACD;;AAN2C,CAAvC;AASP,OAAO,MAAME,OAAqC,GAAG;AACnD,QAAML,IAAN,OAA8CM,QAA9C,EAAwD;AAAA,QAA7C;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,KAA6C;;AACtD,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEnB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAhBkD;AAiB1CoB,QAAAA,SAAS,EAAEP;AAjB+B,OAArB,CAAvB;AAmBAC,MAAAA,MAAM,CAAC,aAAD,EAAgBG,IAAI,CAACI,SAArB,CAAN;AACD,KArBD,CAqBE,OAAOC,CAAP,EAAU;AACVR,MAAAA,MAAM,CAAC,2BAAD,EAA8BQ,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF,GA5BkD;;AA6BnD,QAAMjB,GAAN,eAAqD;AAAA,QAA3C;AAAEQ,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,KAA2C;AAAA,QAAR;AAAEQ,MAAAA;AAAF,KAAQ;;AACnD,QAAI;AACF,YAAM;AAAEP,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEnB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SARkD;AAS1CoB,QAAAA,SAAS,EAAE;AAAEI,UAAAA;AAAF;AAT+B,OAArB,CAAvB;AAWAV,MAAAA,MAAM,CAAC,SAAD,EAAYG,IAAI,CAACf,IAAjB,CAAN;AACD,KAbD,CAaE,OAAOoB,CAAP,EAAU;AACVR,MAAAA,MAAM,CAAC,2BAAD,EAA8BQ,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF;;AAhDkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\r\nimport { RootState } from \"vuefront-store\";\r\nimport { Zone, ZonesResult } from \"vuefront-api\";\r\nimport gql from \"graphql-tag\";\r\n\r\nexport type State = {\r\n  zone: Zone;\r\n  entities: ZonesResult;\r\n};\r\nexport const state: State = {\r\n  zone: {},\r\n  entities: {\r\n    content: [],\r\n  },\r\n};\r\n\r\nexport const getters: GetterTree<State, RootState> = {\r\n  get(state) {\r\n    return state.zone;\r\n  },\r\n  list(state) {\r\n    return state.entities;\r\n  },\r\n};\r\n\r\nexport const mutations: MutationTree<State> = {\r\n  setZone(state, payload) {\r\n    state.zone = payload;\r\n  },\r\n  setEntities(state, payload) {\r\n    state.entities = payload;\r\n  },\r\n};\r\n\r\nexport const actions: ActionTree<State, RootState> = {\r\n  async list({ commit, dispatch, rootGetters }, zoneData) {\r\n    try {\r\n      const { data } = await this.$vfapollo.query({\r\n        query: gql`\r\n          query ($page: Int, $size: Int, $country_id: String) {\r\n            zonesList(page: $page, size: $size, country_id: $country_id) {\r\n              content {\r\n                id\r\n                name\r\n              }\r\n              totalPages\r\n              totalElements\r\n              first\r\n              last\r\n              number\r\n              numberOfElements\r\n            }\r\n          }\r\n        `,\r\n        variables: zoneData,\r\n      });\r\n      commit(\"setEntities\", data.zonesList);\r\n    } catch (e) {\r\n      commit(\"vuefront/setResponseError\", e, {\r\n        root: true,\r\n      });\r\n    }\r\n  },\r\n  async get({ commit, dispatch, rootGetters }, { id }) {\r\n    try {\r\n      const { data } = await this.$vfapollo.query({\r\n        query: gql`\r\n          query ($id: String) {\r\n            zone(id: $id) {\r\n              id\r\n              name\r\n            }\r\n          }\r\n        `,\r\n        variables: { id },\r\n      });\r\n      commit(\"setZone\", data.zone);\r\n    } catch (e) {\r\n      commit(\"vuefront/setResponseError\", e, {\r\n        root: true,\r\n      });\r\n    }\r\n  },\r\n};\r\n"],"file":"zone.mjs"}