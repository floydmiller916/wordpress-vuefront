{"version":3,"sources":["../../../../src/store/store/currency/currency.ts"],"names":["gql","state","currency","getters","get","mutations","setCurrency","actions","load","commit","data","$vfapollo","query","e","root","edit","dispatch","rootGetters","code","mutation","variables","editCurrency"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAMA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAArB;AAIP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,GAAG,CAACH,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACC,QAAb;AACD;;AAHkD,CAA9C;AAMP,OAAO,MAAMG,SAA8B,GAAG;AAC5CC,EAAAA,WAAW,CAACL,KAAD,EAAQC,QAAR,EAAkB;AAC3BD,IAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;;AAH2C,CAAvC;AAMP,OAAO,MAAMK,OAAqC,GAAG;AACnD,QAAMC,IAAN,CAAW;AAAEC,IAAAA;AAAF,GAAX,EAAuB;AACrB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM,KAAKC,SAAL,CAAeC,KAAf,CAAqB;AAC1CA,QAAAA,KAAK,EAAEZ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXkD,OAArB,CAAvB;AAcAS,MAAAA,MAAM,CAAC,aAAD,EAAgBC,IAAI,CAACR,QAArB,CAAN;AACD,KAhBD,CAgBE,OAAOW,CAAP,EAAU;AACVJ,MAAAA,MAAM,CAAC,2BAAD,EAA8BI,CAA9B,EAAiC;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAjC,CAAN;AAGD;AACF,GAvBkD;;AAwBnD,QAAMC,IAAN,CAAW;AAAEN,IAAAA,MAAF;AAAUO,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAX,EAA8C;AAAEC,IAAAA;AAAF,GAA9C,EAAwD;AACtD,UAAMF,QAAQ,CACZ,eADY,EAEZ;AACEG,MAAAA,QAAQ,EAAEnB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAXM;AAYEoB,MAAAA,SAAS,EAAE;AACTF,QAAAA;AADS;AAZb,KAFY,EAkBZ;AACEJ,MAAAA,IAAI,EAAE;AADR,KAlBY,CAAd;;AAuBA,QAAI,CAACG,WAAW,CAAC,gBAAD,CAAhB,EAAoC;AAClCR,MAAAA,MAAM,CAAC,aAAD,EAAgBQ,WAAW,CAAC,YAAD,CAAX,CAA0BI,YAA1C,CAAN;AACD;AACF;;AAnDkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { RootState } from \"vuefront-store\";\nimport { Currency } from \"vuefront-api\";\nimport gql from \"graphql-tag\";\n\nexport type State = {\n  currency: Currency[];\n};\n\nexport const state: State = {\n  currency: [],\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  get(state) {\n    return state.currency;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setCurrency(state, currency) {\n    state.currency = currency;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async load({ commit }) {\n    try {\n      const { data } = await this.$vfapollo.query({\n        query: gql`\n          {\n            currency {\n              code\n              symbol_left\n              symbol_right\n              title\n              active\n            }\n          }\n        `,\n      });\n\n      commit(\"setCurrency\", data.currency);\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, {\n        root: true,\n      });\n    }\n  },\n  async edit({ commit, dispatch, rootGetters }, { code }) {\n    await dispatch(\n      \"apollo/mutate\",\n      {\n        mutation: gql`\n          mutation ($code: String) {\n            editCurrency(code: $code) {\n              code\n              symbol_left\n              symbol_right\n              title\n              active\n            }\n          }\n        `,\n        variables: {\n          code,\n        },\n      },\n      {\n        root: true,\n      }\n    );\n\n    if (!rootGetters[\"vuefront/error\"]) {\n      commit(\"setCurrency\", rootGetters[\"apollo/get\"].editCurrency);\n    }\n  },\n};\n"],"file":"currency.mjs"}