{"version":3,"sources":["../../../../src/store/blog/post/post.ts"],"names":["gql","state","entities","post","getters","list","get","mutations","setEntities","posts","setPost","actions","addReview","commit","dispatch","rootGetters","reviewData","mutation","variables","root","addBlogPostReview"],"mappings":"AAGA,OAAOA,GAAP,MAAgB,aAAhB;AAKA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,OAAqC,GAAG;AACnDC,EAAAA,IAAI,CAACJ,KAAD,EAAQ;AACV,WAAOA,KAAK,CAACC,QAAb;AACD,GAHkD;;AAInDI,EAAAA,GAAG,CAACL,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACE,IAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAMI,SAA8B,GAAG;AAC5CC,EAAAA,WAAW,CAACP,KAAD,EAAQQ,KAAR,EAAe;AACxBR,IAAAA,KAAK,CAACC,QAAN,GAAiBO,KAAjB;AACD,GAH2C;;AAI5CC,EAAAA,OAAO,CAACT,KAAD,EAAQE,IAAR,EAAc;AACnBF,IAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD;;AAN2C,CAAvC;AASP,OAAO,MAAMQ,OAAqC,GAAG;AACnD,QAAMC,SAAN,CAAgB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,GAAhB,EAAmDC,UAAnD,EAA+D;AAC7D,UAAMF,QAAQ,CACZ,eADY,EAEZ;AACEG,MAAAA,QAAQ,EAAEjB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAtDM;AAuDEkB,MAAAA,SAAS,EAAEF;AAvDb,KAFY,EA2DZ;AACEG,MAAAA,IAAI,EAAE;AADR,KA3DY,CAAd;;AAgEA,QAAI,CAACJ,WAAW,CAAC,gBAAD,CAAhB,EAAoC;AAClCF,MAAAA,MAAM,CAAC,SAAD,EAAYE,WAAW,CAAC,YAAD,CAAX,CAA0BK,iBAAtC,CAAN;AACD;AACF;;AArEkD,CAA9C","sourcesContent":["import { MutationTree, GetterTree, ActionTree } from \"vuex\";\nimport { Post, PostResult } from \"vuefront-api\";\nimport { RootState } from \"vuefront-store\";\nimport gql from \"graphql-tag\";\nexport type State = {\n  post: Post;\n  entities: PostResult;\n};\nexport const state: State = {\n  entities: {},\n  post: {},\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  list(state) {\n    return state.entities;\n  },\n  get(state) {\n    return state.post;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setEntities(state, posts) {\n    state.entities = posts;\n  },\n  setPost(state, post) {\n    state.post = post;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async addReview({ commit, dispatch, rootGetters }, reviewData) {\n    await dispatch(\n      \"apollo/mutate\",\n      {\n        mutation: gql`\n          mutation (\n            $id: String\n            $content: String\n            $author: String\n            $rating: Float\n          ) {\n            addBlogPostReview(\n              id: $id\n              content: $content\n              author: $author\n              rating: $rating\n            ) {\n              id\n              title\n              description\n              image\n              imageLazy\n              datePublished\n              rating\n              categories {\n                id\n                name\n                url(url: \"/blog/category/_id\")\n              }\n              prev {\n                id\n                name\n                image\n                imageLazy\n                shortDescription\n                keyword\n              }\n              next {\n                id\n                name\n                image\n                imageLazy\n                shortDescription\n                keyword\n              }\n              reviews {\n                totalElements\n                content {\n                  author\n                  author_email\n                  content\n                  created_at\n                  rating\n                }\n              }\n            }\n          }\n        `,\n        variables: reviewData,\n      },\n      {\n        root: true,\n      }\n    );\n\n    if (!rootGetters[\"vuefront/error\"]) {\n      commit(\"setPost\", rootGetters[\"apollo/get\"].addBlogPostReview);\n    }\n  },\n};\n"],"file":"post.mjs"}