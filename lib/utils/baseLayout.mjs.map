{"version":3,"sources":["../../src/utils/baseLayout.ts"],"names":["useStore","isEmpty","isUndefined","useRoute","computed","inject","useLayout","name","store","route","vuefront$","dispatch","position","path","matched","length","key","params","replace","toString","commit","currentRoute","getters","modulesList","layout","modules","value","initLayout","template","layouts","regexRoute","regex","RegExp","test"],"mappings":"AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,QAArC;AACA,SAASC,QAAT,QAAoC,YAApC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AAEA,eAAe,SAASC,SAAT,CAAmBC,IAAnB,EAAiC;AAC9C,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,SAAS,GAAGL,MAAM,CAAM,WAAN,CAAxB;;AAEA,MAAI,CAACJ,OAAO,CAACM,IAAD,CAAZ,EAAoB;AAClBC,IAAAA,KAAK,CAACG,QAAN,CAAe,sBAAf,EAAuC;AAAEC,MAAAA,QAAQ,EAAEL;AAAZ,KAAvC;AACD;;AAED,MAAIM,IAAI,GAAGJ,KAAK,GAAGA,KAAK,CAACI,IAAT,GAAgB,GAAhC;;AACA,MAAIJ,KAAK,IAAIA,KAAK,CAACK,OAAN,CAAcC,MAAd,GAAuB,CAApC,EAAuC;AACrCF,IAAAA,IAAI,GAAGJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBD,IAAxB;;AACA,SAAK,MAAMG,GAAX,IAAkBP,KAAK,CAACQ,MAAxB,EAAgC;AAC9BJ,MAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAc,IAAGF,GAAI,EAArB,EAAwBP,KAAK,CAACQ,MAAN,CAAaD,GAAb,EAAkBG,QAAlB,EAAxB,CAAP;AACD;AACF;;AAEDX,EAAAA,KAAK,CAACY,MAAN,CAAa,oBAAb,EAAmCV,SAAS,CAACO,MAA7C;AACAT,EAAAA,KAAK,CAACY,MAAN,CAAa,mBAAb,EAAkCP,IAAlC;AAEA,QAAMQ,YAAY,GAAGjB,QAAQ,CAAC,MAAMI,KAAK,CAACc,OAAN,CAAc,uBAAd,CAAP,CAA7B;AACA,QAAMC,WAAW,GAAGnB,QAAQ,CAAC,MAAMI,KAAK,CAACc,OAAN,CAAc,kBAAd,CAAP,CAA5B;AACA,QAAME,MAAM,GAAGpB,QAAQ,CAAC,MAAMI,KAAK,CAACc,OAAN,CAAc,iBAAd,CAAP,CAAvB;AAEA,QAAMG,OAAO,GAAGrB,QAAQ,CAAC,MAAMmB,WAAW,CAACG,KAAZ,CAAkBnB,IAAlB,CAAP,CAAxB;;AAEA,QAAMoB,UAAU,GAAG,MAAM;AACvB,QAAIC,QAAQ,GAAG,SAAf;;AACA,SAAK,MAAMnB,KAAX,IAAoBC,SAAS,CAACmB,OAA9B,EAAuC;AACrC,YAAML,MAAM,GAAGd,SAAS,CAACmB,OAAV,CAAkBpB,KAAlB,CAAf;AACA,UAAIqB,UAAU,GAAGrB,KAAK,CAACS,OAAN,CAAc,GAAd,EAAmB,IAAnB,CAAjB;AACAY,MAAAA,UAAU,GAAGA,UAAU,CAACZ,OAAX,CAAmB,IAAnB,EAAyB,MAAzB,CAAb;AACA,YAAMa,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMF,UAAN,GAAmB,GAA9B,EAAmC,GAAnC,CAAd;;AAEA,UAAIC,KAAK,CAACE,IAAN,CAAWZ,YAAY,CAACK,KAAxB,CAAJ,EAAoC;AAClC,YAAI,CAACxB,WAAW,CAACsB,MAAM,CAACA,MAAR,CAAhB,EAAiC;AAC/BI,UAAAA,QAAQ,GAAGJ,MAAM,CAACA,MAAlB;AACD;AACF;AACF;;AACDhB,IAAAA,KAAK,CAACY,MAAN,CAAa,oBAAb,EAAmC;AACjCI,MAAAA,MAAM,EAAEI,QADyB;AAEjCnB,MAAAA,KAAK,EAAEY,YAAY,CAACK;AAFa,KAAnC;AAID,GAlBD;;AAoBA,SAAO;AAAEC,IAAAA,UAAF;AAAcH,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,GAAP;AACD","sourcesContent":["import { useStore } from \"vuex\";\r\nimport { isEmpty, isUndefined } from \"lodash\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { computed, inject } from \"vue\";\r\n\r\nexport default function useLayout(name: string) {\r\n  const store = useStore();\r\n  const route = useRoute();\r\n  const vuefront$ = inject<any>(\"$vuefront\");\r\n\r\n  if (!isEmpty(name)) {\r\n    store.dispatch(\"position/loadModules\", { position: name });\r\n  }\r\n\r\n  let path = route ? route.path : \"/\";\r\n  if (route && route.matched.length > 0) {\r\n    path = route.matched[0].path;\r\n    for (const key in route.params) {\r\n      path = path.replace(`:${key}`, route.params[key].toString());\r\n    }\r\n  }\r\n\r\n  store.commit(\"position/setParams\", vuefront$.params);\r\n  store.commit(\"position/setRoute\", path);\r\n\r\n  const currentRoute = computed(() => store.getters[\"position/currentRoute\"]);\r\n  const modulesList = computed(() => store.getters[\"position/modules\"]);\r\n  const layout = computed(() => store.getters[\"position/layout\"]);\r\n\r\n  const modules = computed(() => modulesList.value(name));\r\n\r\n  const initLayout = () => {\r\n    let template = \"default\";\r\n    for (const route in vuefront$.layouts) {\r\n      const layout = vuefront$.layouts[route];\r\n      let regexRoute = route.replace(\"*\", \".*\");\r\n      regexRoute = regexRoute.replace(\"//\", \"\\\\//\");\r\n      const regex = new RegExp(\"^\" + regexRoute + \"$\", \"i\");\r\n\r\n      if (regex.test(currentRoute.value)) {\r\n        if (!isUndefined(layout.layout)) {\r\n          template = layout.layout;\r\n        }\r\n      }\r\n    }\r\n    store.commit(\"position/setLayout\", {\r\n      layout: template,\r\n      route: currentRoute.value,\r\n    });\r\n  };\r\n\r\n  return { initLayout, layout, modules };\r\n}\r\n"],"file":"baseLayout.mjs"}