{"version":3,"sources":["../../src/utils/module.ts"],"names":["isEmpty","isUndefined","computed","inject","useRoute","useStore","useModule","vuefront$","store","route","commit","params","path","matched","length","key","replace","toString","currentRoute","getters","positions","console","log","checkModules","position","result","status","value","layouts","layout","regexRoute","regex","RegExp","test","extensions","name"],"mappings":"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","sourcesContent":["import { isEmpty, isUndefined } from \"lodash\";\nimport { computed, inject } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"vuex\";\nexport default function useModule() {\n  const vuefront$ = inject<any>(\"$vuefront\");\n  const store = useStore();\n  const route = useRoute();\n  store.commit(\"position/setParams\", vuefront$.params);\n\n  let path = route ? route.path : \"/\";\n  if (route && route.matched.length > 0) {\n    path = route.matched[0].path;\n    for (const key in route.params) {\n      path = path.replace(`:${key}`, route.params[key].toString());\n    }\n  }\n  store.commit(\"position/setRoute\", path);\n\n  const currentRoute = computed(() => store.getters[\"position/currentRoute\"]);\n  const positions = computed(() => store.getters[\"position/position\"]);\n  console.log(\"positions\");\n  console.log(positions);\n  const checkModules = (position: string) => {\n    let result = false;\n    const status = positions.value(position);\n\n    if (!status) {\n      for (const route in vuefront$.layouts) {\n        const layout = vuefront$.layouts[route];\n        let regexRoute = route.replace(\"*\", \".*\");\n        regexRoute = regexRoute.replace(\"//\", \"\\\\//\");\n        const regex = new RegExp(\"^\" + regexRoute + \"$\", \"i\");\n\n        if (regex.test(currentRoute.value)) {\n          if (!isUndefined(layout[position]) && !isEmpty(layout[position])) {\n            result = true;\n            break;\n          }\n          if (\n            !isUndefined(layout.extensions) &&\n            !isUndefined(layout.extensions[position]) &&\n            !isEmpty(layout.extensions[position])\n          ) {\n            result = true;\n            break;\n          }\n        }\n      }\n    } else {\n      result = status;\n    }\n\n    store.commit(\"position/setPosition\", {\n      name: position,\n      status: result,\n      route: currentRoute,\n    });\n\n    return result;\n  };\n\n  return { checkModules };\n}\n"],"file":"module.mjs"}