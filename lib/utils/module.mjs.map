{"version":3,"sources":["../../src/utils/module.ts"],"names":["isEmpty","isUndefined","computed","inject","useRoute","useStore","useModule","vuefront$","store","route","commit","params","path","matched","length","key","replace","toString","currentRoute","getters","positions","checkModules","position","result","status","value","layouts","layout","regexRoute","regex","RegExp","test","extensions","name"],"mappings":"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","sourcesContent":["import { isEmpty, isUndefined } from \"lodash\";\r\nimport { computed, inject } from \"vue\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nexport default function useModule() {\r\n  const vuefront$ = inject<any>(\"$vuefront\");\r\n  const store = useStore();\r\n  const route = useRoute();\r\n  store.commit(\"position/setParams\", vuefront$.params);\r\n\r\n  let path = route ? route.path : \"/\";\r\n  if (route && route.matched.length > 0) {\r\n    path = route.matched[0].path;\r\n    for (const key in route.params) {\r\n      path = path.replace(`:${key}`, route.params[key].toString());\r\n    }\r\n  }\r\n  store.commit(\"position/setRoute\", path);\r\n\r\n  const currentRoute = computed(() => store.getters[\"position/currentRoute\"]);\r\n  const positions = computed(() => store.getters[\"position/position\"]);\r\n\r\n  const checkModules = (position: string) => {\r\n    let result = false;\r\n    const status = positions.value(position);\r\n\r\n    if (!status) {\r\n      for (const route in vuefront$.layouts) {\r\n        const layout = vuefront$.layouts[route];\r\n        let regexRoute = route.replace(\"*\", \".*\");\r\n        regexRoute = regexRoute.replace(\"//\", \"\\\\//\");\r\n        const regex = new RegExp(\"^\" + regexRoute + \"$\", \"i\");\r\n\r\n        if (regex.test(currentRoute.value)) {\r\n          if (!isUndefined(layout[position]) && !isEmpty(layout[position])) {\r\n            result = true;\r\n            break;\r\n          }\r\n          if (\r\n            !isUndefined(layout.extensions) &&\r\n            !isUndefined(layout.extensions[position]) &&\r\n            !isEmpty(layout.extensions[position])\r\n          ) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      result = status;\r\n    }\r\n\r\n    store.commit(\"position/setPosition\", {\r\n      name: position,\r\n      status: result,\r\n      route: currentRoute,\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  return { checkModules };\r\n}\r\n"],"file":"module.mjs"}